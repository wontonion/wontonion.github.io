"use strict";(self.webpackChunktestpro=self.webpackChunktestpro||[]).push([[6842],{2392:(e,o,n)=>{n.d(o,{R:()=>i,x:()=>c});var r=n(758);const s={},t=r.createContext(s);function i(e){const o=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function c(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(t.Provider,{value:o},e.children)}},6025:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>d,contentTitle:()=>c,default:()=>m,frontMatter:()=>i,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"frontend-study/form-with-zod-shadcn-react-hook-form","title":"Form Control with Zod, React Hook Form, Shadcn, and","description":"Overview","source":"@site/docs/frontend-study/form-with-zod-shadcn-react-hook-form.md","sourceDirName":"frontend-study","slug":"/frontend-study/form-with-zod-shadcn-react-hook-form","permalink":"/zh-Hans/docs/frontend-study/form-with-zod-shadcn-react-hook-form","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/frontend-study/form-with-zod-shadcn-react-hook-form.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Frontend Study","permalink":"/zh-Hans/docs/category/frontend-study"},"next":{"title":"Tutorial Intro","permalink":"/zh-Hans/docs/intro"}}');var s=n(6070),t=n(2392);const i={},c="Form Control with Zod, React Hook Form, Shadcn, and",d={},a=[{value:"Overview",id:"overview",level:2},{value:"Antonomy of Components",id:"antonomy-of-components",level:2},{value:"An example of <code>Form</code> in Shadcn",id:"an-example-of-form-in-shadcn",level:3},{value:"An example of <code>Form</code> in Shadcn with <code>react-hook-form</code> and <code>zod</code>",id:"an-example-of-form-in-shadcn-with-react-hook-form-and-zod",level:3},{value:"1. Create a schema with <code>zod</code>.",id:"1-create-a-schema-with-zod",level:4},{value:"2. Use the schema with <code>react-hook-form</code> and <code>zod</code>",id:"2-use-the-schema-with-react-hook-form-and-zod",level:4},{value:"3. Use the form in the UI",id:"3-use-the-form-in-the-ui",level:4}];function l(e){const o={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(o.header,{children:(0,s.jsx)(o.h1,{id:"form-control-with-zod-react-hook-form-shadcn-and",children:"Form Control with Zod, React Hook Form, Shadcn, and"})}),"\n",(0,s.jsx)(o.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.a,{href:"https://ui.shadcn.com/",children:"Shadcn"})," is a library of pre-built components that are styled with Tailwind CSS."]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.a,{href:"https://zod.dev/",children:"Zod"})," is a schema declaration and validation library for TypeScript."]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.a,{href:"https://react-hook-form.com/",children:"React Hook Form"})," is a library for managing forms in React."]}),"\n"]}),"\n",(0,s.jsx)(o.h2,{id:"antonomy-of-components",children:"Antonomy of Components"}),"\n",(0,s.jsxs)(o.h3,{id:"an-example-of-form-in-shadcn",children:["An example of ",(0,s.jsx)(o.code,{children:"Form"})," in Shadcn"]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-tsx",children:'import { useForm } from \'react-hook-form\'\n<Form>\n    const form = useForm()\n\n    <FormField\n    control={form.control}\n    name="username"\n    render={({ field }) => (\n        <FormItem>\n        <FormLabel>Username</FormLabel>\n        <FormControl>\n            <Input placeholder="shadcn" {...field} />\n        </FormControl>\n        <FormDescription>This is your public display name.</FormDescription>\n        <FormMessage />\n        </FormItem>\n    )}\n    />\n</Form>\n'})}),"\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.code,{children:"Form"})," is a wrapper component that provides the context for the form."]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.code,{children:"FormField"})," is a component that renders a form field."]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.code,{children:"FormItem"})," is a component that renders a form item."]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.code,{children:"FormLabel"})," is a component that renders a form label."]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.code,{children:"FormControl"})," is a component that renders a form control."]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.code,{children:"FormDescription"})," is a component that renders a form description."]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.code,{children:"FormMessage"})," is a component that renders a form message."]}),"\n"]}),"\n",(0,s.jsxs)(o.p,{children:["But we need more to cooperate with ",(0,s.jsx)(o.code,{children:"react-hook-form"})," and ",(0,s.jsx)(o.code,{children:"zod"}),"."]}),"\n",(0,s.jsxs)(o.h3,{id:"an-example-of-form-in-shadcn-with-react-hook-form-and-zod",children:["An example of ",(0,s.jsx)(o.code,{children:"Form"})," in Shadcn with ",(0,s.jsx)(o.code,{children:"react-hook-form"})," and ",(0,s.jsx)(o.code,{children:"zod"})]}),"\n",(0,s.jsxs)(o.h4,{id:"1-create-a-schema-with-zod",children:["1. Create a schema with ",(0,s.jsx)(o.code,{children:"zod"}),"."]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-tsx",metastring:"showLineNumbers",children:'"use client"\n\nimport { z } from "zod"\n\nconst formSchema = z.object({\n    username: z.string().min(2).max(50),\n    })\n'})}),"\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.code,{children:"zod"})," is a schema declaration and validation library for TypeScript."]}),"\n",(0,s.jsxs)(o.li,{children:["The reason why we use ",(0,s.jsx)(o.code,{children:'"use client"'})," is that ",(0,s.jsx)(o.code,{children:"zod"})," is a client-side library."]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.code,{children:"z.object({})"})," is a function that creates a schema for an object."]}),"\n"]}),"\n",(0,s.jsxs)(o.h4,{id:"2-use-the-schema-with-react-hook-form-and-zod",children:["2. Use the schema with ",(0,s.jsx)(o.code,{children:"react-hook-form"})," and ",(0,s.jsx)(o.code,{children:"zod"})]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-tsx",metastring:"showLineNumbers highlight={3-4,13-20,23}",children:'"use client"\n\nimport { zodResolver } from "@hookform/resolvers/zod"\nimport { useForm } from "react-hook-form"\nimport { z } from "zod"\n\nconst formSchema = z.object({\n  username: z.string().min(2, {\n      message: "Username must be at least 2 characters.",\n  }),\n})\n\nexport function ProfileForm() {\n// 1. Define your form.\nconst form = useForm<z.infer<typeof formSchema>>({\n  resolver: zodResolver(formSchema),\n  defaultValues: {\n    username: "",\n  },\n})\n\n// 2. Define a submit handler.\nfunction onSubmit(values: z.infer<typeof formSchema>) {\n  // Do something with the form values.\n  // \u2705 This will be type-safe and validated.\n  console.log(values)\n}\n}\n'})}),"\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.code,{children:"zodResolver(formSchema)"})," is a function that resolves the schema to a resolver."]}),"\n",(0,s.jsx)(o.li,{children:"This resolver is used to validate the form values."}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.code,{children:"useForm<z.infer<typeof formSchema>>({})"})," is a function that creates a form."]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.code,{children:"z.infer<typeof formSchema>"})," is a function that infers the type of the form values."]}),"\n"]}),"\n",(0,s.jsx)(o.h4,{id:"3-use-the-form-in-the-ui",children:"3. Use the form in the UI"}),"\n",(0,s.jsxs)(o.p,{children:["Here we need to use ",(0,s.jsx)(o.code,{children:"Form"})," component from Shadcn and put validation logic in ",(0,s.jsx)(o.code,{children:"onSubmit"})," function."]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-tsx",metastring:"showLineNumbers highlight={7-17,28-50}",children:'"use client"\n\nimport { zodResolver } from "@hookform/resolvers/zod"\nimport { useForm } from "react-hook-form"\nimport { z } from "zod"\n\nimport { Button } from "@/components/ui/button"\nimport {\nForm,\nFormControl,\nFormDescription,\nFormField,\nFormItem,\nFormLabel,\nFormMessage,\n} from "@/components/ui/form"\nimport { Input } from "@/components/ui/input"\n\nconst formSchema = z.object({\nusername: z.string().min(2, {\n  message: "Username must be at least 2 characters.",\n}),\n})\n\nexport function ProfileForm() {\n//const form = useForm<z.infer<typeof formSchema>>({ ... })\n// ...\n\nreturn (\n  <Form {...form}>\n    <form onSubmit={form.handleSubmit(onSubmit)} className="space-y-8">\n      <FormField\n        control={form.control}\n        name="username"\n        render={({ field }) => (\n          <FormItem>\n            <FormLabel>Username</FormLabel>\n            <FormControl>\n              <Input placeholder="shadcn" {...field} />\n            </FormControl>\n            <FormDescription>\n              This is your public display name.\n            </FormDescription>\n            <FormMessage />\n          </FormItem>\n        )}\n      />\n      <Button type="submit">Submit</Button>\n    </form>\n  </Form>\n)\n}\n'})}),"\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.code,{children:"<Form {..form}>"})," is used to pass the form context to ",(0,s.jsx)(o.code,{children:"Form"})," component. ",(0,s.jsx)(o.code,{children:"form"})," comes from ",(0,s.jsx)(o.code,{children:"useForm"})," hook."]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.code,{children:"onSubmit={form.handleSubmit(onSubmit)}"})," is used to handle the form submission. And this is still on original ",(0,s.jsx)(o.code,{children:"form"})," component."]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.code,{children:"<FormField>"})," is used to render a form field."]}),"\n",(0,s.jsxs)(o.li,{children:["In the ",(0,s.jsx)(o.code,{children:"FormField"}),", ",(0,s.jsx)(o.code,{children:"control={form.control}"})," is used to pass the form control to the field. ",(0,s.jsx)(o.code,{children:"from.control"})," comes from ",(0,s.jsx)(o.code,{children:"useForm"})," hook. Even though we didn't define ",(0,s.jsx)(o.code,{children:"control"})," explicitly, ",(0,s.jsx)(o.a,{href:"https://react-hook-form.com/docs/useform/control",children:"useForm"})," has already provided it by default."]}),"\n",(0,s.jsxs)(o.li,{children:["Also, ",(0,s.jsx)(o.code,{children:"field"})," in ",(0,s.jsx)(o.code,{children:"render={({ field }) => (...)}"})," is used to bind the field to the input. It comes from ",(0,s.jsx)(o.code,{children:"controller"})," of ",(0,s.jsx)(o.a,{href:"https://react-hook-form.com/docs/usecontroller/controller",children:(0,s.jsx)(o.code,{children:"useController"})}),". And ",(0,s.jsx)(o.code,{children:"FormField"})," is a wrapper of ",(0,s.jsx)(o.code,{children:"Controller"})," component."]}),"\n",(0,s.jsxs)(o.li,{children:["Remeber to spread the ",(0,s.jsx)(o.code,{children:"field"})," to ",(0,s.jsx)(o.code,{children:"Input"})," component."]}),"\n"]}),"\n",(0,s.jsxs)(o.p,{children:["ref: ",(0,s.jsx)(o.a,{href:"https://ui.shadcn.com/docs/components/form",children:"https://ui.shadcn.com/docs/components/form"})]})]})}function m(e={}){const{wrapper:o}={...(0,t.R)(),...e.components};return o?(0,s.jsx)(o,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);